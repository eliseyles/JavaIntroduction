1. Объясните, что имеется в виду, когда говорится: Java-язык программирования и Java-платформа.

What is Java?
Java is a programming language and a computing platform for application development. It was first released by Sun Microsystem in 1995 and later acquired by Oracle Corporation. It is one of the most used programming languages.

What is Java Platform?
Java platform is a collection of programs that help to develop and run programs written in the Java programming language. Java platform includes an execution engine, a compiler, and a set of libraries. JAVA is platform-independent language. It is not specific to any processor or operating system.

https://www.guru99.com/java-platform.html

2. Поясните, как связаны имя java-файла и классы, которые в этом файле объявляются.

публичный класс, описанный в этом файле должен иметь такое же имя, как и название файла. соответственно в файле должен быть только один класс для лучшей навигации.
в исходном коде может быть описано сколько угодно классов, но только одим может быть публичным.
при компиляции кода с несколькими классами будут создаваться свои байт коды для каждого класса отдельно, чтоб их можно было независимо подгружать.
если нет ни одного публичного класса, то название класса может быть каким угодно.

3. Расшифруйте аббревиатуры JVM, JDK и JRE; покажите, где “они находятся” и что собой представляют.

JVM - java virtual machine. это виртуальная машина, на которой выполняются байт-коды Java. JVM не понимает исходный код Java; вот почему вы компилируете свои файлы *.java для получения файлов *.class которые содержат байт-коды, понятные JVM. Это также сущность, которая позволяет Java быть "переносимым языком" (писать один раз, запускать где угодно). Действительно, существуют конкретные реализации JVM для разных систем (Windows, Linux, macOS, см. Список в Википедии), цель состоит в том, чтобы с одинаковыми байт-кодами все они давали одинаковые результаты

JDK - java development kit. JDK является расширенным набором JRE и содержит все, что есть в JRE, а также такие инструменты, как компиляторы и отладчики, необходимые для разработки апплетов и приложений.

JRE - Java Runtime Environment (JRE) предоставляет библиотеки, виртуальную машину Java и другие компоненты для запуска апплетов и приложений, написанных на языке программирования Java. Кроме того, в JRE входят две ключевые технологии развертывания: Java-плагин, который позволяет апплетам работать в популярных браузерах; и Java Web Start, который развертывает автономные приложения по сети. Это также основа для технологий в Java 2 Platform, Enterprise Edition (J2EE) для разработки и развертывания программного обеспечения для предприятий. JRE не содержит инструментов и утилит, таких как компиляторы или отладчики для разработки апплетов и приложений.

JVM - это виртуальная машина Java - фактически она выполняет байт-код Java.

JRE - это среда выполнения Java - она, помимо прочего, содержит JVM и является тем, что вам нужно для запуска Java-программы.

JDK - это Java Development Kit - это JRE, но с добавлением javac (что вам нужно для компиляции исходного кода Java) и других инструментов программирования.

https://www.oracle.com/technetwork/java/javase/tech/index-jsp-140763.html

4. Объясните, как скомпилировать и запустить приложение из командной строки, а также зачем в переменных среды окружения прописывать пути к установленному jdk.

Простейший способ компиляции – вызов строчного компилятора из корневого каталога (в нем находится каталог chapt01):
javac chapt01/FirstProgram.java
При успешной компиляции создаются файлы FirstProgram.class
и Mustang.class. Запустить этот виртуальный код можно с помощью интерпретатора Java:
java chapt01.FirstProgram
Здесь к имени приложения FirstProgram.class добавляется имя пакета
chapt01, в котором он расположен

5. Перечислите атрибуты доступа, объясните их действие

Как я уже говорил, в Java существуют четыре модификатора доступа: public, private, protected и отсутствие модификатора (он же модификатор по умолчанию). К невложенным классам и интерфейсам применимы только два из них: public и модификатор по умолчанию. К методам и полям класса применим весь набор.

Если метод или поле имеют модификатор public, то они потенциально доступны всей вселенной.
Если метод или поле имеют модификатор доступа private, то они доступны только в рамках класса. Такие члены класса не наследуются, поэтому их невозомжно заместить в подклассах. Помните об этом.
Если метод или поле имеют модификатор доступа по умолчанию, то они доступны только в рамках пакета.
Если метод или поле имеют модификатор доступа protected, то они, прежде всего, доступны самому классу и его наследникам. Кроме того, доступ к этим членам класса могут получить их собратья по пакету.

6. Что такое пакеты в java-программе, что представляют собой пакеты на диске? Каково соглашение по
именованию пакетов? Как создать пакет?

Имя класса в пакете должно быть уникальным. Физически пакет представляет
собой каталог, в который помещаются программные файлы, содержащие реализацию классов.

7. Объясните, какие классы, интерфейсы, перечисления необходимо импортировать в вашу программу, как это сделать. Влияет ли импорт пакета на импорт классов и др., лежащего в подпакетах? Какой пакет в Java импортируется по умолчанию?

8. Объясните различия между терминами “объект” и “ссылка на объект”.

9. Какие примитивные типы Java вы знаете, как создать переменные примитивных типов? Объясните
процедуру, по которой переменные примитивных типов передаются в методы как параметры.

10. Каков размер примитивных типов, как размер примитивных типов зависит от разрядности платформы, что такое преобразование (приведение) типов и зачем оно необходимо? Какие примитивные типы не приводятся ни к какому другому типу.

11. Объясните, что такое явное и неявное приведение типов, приведите примеры, когда такое преобразование имеет место.

12. Что такое литералы в Java-программе, какую классификацию литералов вы знаете, как записываются литералы различных видов и типов в Java-программе?

13. Как осуществляется работа с типами при вычислении арифметически выражений в Java?

14. Что такое классы-оболочки, для чего они предназначены? Объясните, что значит: объект класса оболочки – константный объект.

15. Объясните разницу между примитивными и ссылочными типами данных. Поясните существующие различия, при передаче параметров примитивных и ссылочных типов в методы. Объясните, как константные объекты ведут себя при передаче в метод.

16. Поясните, что такое автоупаковка и автораспаковка.

17. Перечислите известные вам арифметические, логические и битовые операторы, определите случаи их употребления. Что такое приоритет оператора, как определить, в какой последовательности будут
выполняться операции в выражении, если несколько из них имеют одинаковый приоритет.

18. Укажите правила выполнения операций с плавающий точкой в Java (согласно стандарту IEEE754). Как определить, что результатом вычисления стала бесконечность или нечисло?

19. Что такое статический импорт, какие элементы можно импортировать при статическом импорте.

20. Объясните работу операторов if, switch, while, do-while, for, for-each. Напишите корректные примеры
работы этих операторов.

21. Объясните работу оператора instanceof. Что будет результатом работы оператора, если слева от него будет стоять ссылка, равная null?
